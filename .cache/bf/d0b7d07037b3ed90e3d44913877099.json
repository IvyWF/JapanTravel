{"id":"scripts/shaders/fragmentShader.glsl","dependencies":[{"name":"/Users/xuwenfei/Desktop/JapanTravel copie/package.json","includedInParent":true,"mtime":1700420404331}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform sampler2D uTexture;\\nuniform float uAlpha;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\nvec3 rgbShift(sampler2D textureimage, vec2 uv, vec2 offset) {\\n    float r = texture2D(textureimage, uv + offset).r;\\n    vec2 gb = texture2D(textureimage, uv).gb;\\n    return vec3(r, gb);\\n}\\n\\nvoid main() {\\n    // vec3 color = texture2D(uTexture, vUv).rgb;\\n    vec3 color = rgbShift(uTexture, vUv, uOffset);\\n    gl_FragColor = vec4(color, uAlpha);\\n}\\n\\n// void main() {\\n//     vec4 imageView = texture2D(uTexture, vUv);\\n\\n//     gl_FragColor = vec4(imageView);\\n//     //gl_FragColor = vec4(vUv, 0., 1.);\\n// }\\n\\n// varying float vNoise;\\n// varying vec2 vUv;\\n// uniform sampler2D beachTexture;\\n// uniform float time;\\n\\n// void main() {\\n//     // vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\n//     // vec3 color1 = vec3(1., 0., 0.);\\n//     // vec3 color2 = vec3(1., 1., 1.);\\n//     // vec3 finalColor = mix(color1, color2, 0.5 * (vNoise + 1.));\\n\\n//     // vec2 newUV = vUv;\\n\\n//     // newUV = vec2(newUV.x, newUV.y + 0.01 * sin(newUV.x * 10. + time));\\n//     //vec4 beachView = texture2D(beachTexture, vUv);\\n\\n//     //gl_FragColor = vec4(finalColor, 1.);\\n//     gl_FragColor = vec4(vUv, 0., 1.);\\n//     //gl_FragColor = beachView;\\n//     //gl_FragColor = vec4(vNoise);\\n// }\";"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"scripts/shaders/fragmentShader.glsl","original":{"line":1,"column":0},"name":"module"},{"generated":{"line":1,"column":6},"source":"scripts/shaders/fragmentShader.glsl","original":{"line":1,"column":6}},{"generated":{"line":1,"column":7},"source":"scripts/shaders/fragmentShader.glsl","original":{"line":1,"column":7},"name":"exports"},{"generated":{"line":1,"column":14},"source":"scripts/shaders/fragmentShader.glsl","original":{"line":1,"column":14}},{"generated":{"line":1,"column":17},"source":"scripts/shaders/fragmentShader.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1348},"source":"scripts/shaders/fragmentShader.glsl","original":{"line":1,"column":1346}}],"sources":{"scripts/shaders/fragmentShader.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform sampler2D uTexture;\\nuniform float uAlpha;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\nvec3 rgbShift(sampler2D textureimage, vec2 uv, vec2 offset) {\\n    float r = texture2D(textureimage, uv + offset).r;\\n    vec2 gb = texture2D(textureimage, uv).gb;\\n    return vec3(r, gb);\\n}\\n\\nvoid main() {\\n    // vec3 color = texture2D(uTexture, vUv).rgb;\\n    vec3 color = rgbShift(uTexture, vUv, uOffset);\\n    gl_FragColor = vec4(color, uAlpha);\\n}\\n\\n// void main() {\\n//     vec4 imageView = texture2D(uTexture, vUv);\\n\\n//     gl_FragColor = vec4(imageView);\\n//     //gl_FragColor = vec4(vUv, 0., 1.);\\n// }\\n\\n// varying float vNoise;\\n// varying vec2 vUv;\\n// uniform sampler2D beachTexture;\\n// uniform float time;\\n\\n// void main() {\\n//     // vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\n//     // vec3 color1 = vec3(1., 0., 0.);\\n//     // vec3 color2 = vec3(1., 1., 1.);\\n//     // vec3 finalColor = mix(color1, color2, 0.5 * (vNoise + 1.));\\n\\n//     // vec2 newUV = vUv;\\n\\n//     // newUV = vec2(newUV.x, newUV.y + 0.01 * sin(newUV.x * 10. + time));\\n//     //vec4 beachView = texture2D(beachTexture, vUv);\\n\\n//     //gl_FragColor = vec4(finalColor, 1.);\\n//     gl_FragColor = vec4(vUv, 0., 1.);\\n//     //gl_FragColor = beachView;\\n//     //gl_FragColor = vec4(vNoise);\\n// }\";"},"lineCount":null}},"error":null,"hash":"62c76ff22570b2be3f3117bfa481b620","cacheData":{"env":{}}}